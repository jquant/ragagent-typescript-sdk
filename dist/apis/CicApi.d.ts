/**
 * Ragagent MCP Gateway
 * Advanced AI-powered conversation management system
 *
 * The version of the OpenAPI document: 0.4.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
export interface DownloadLocalFileCicSearchDownloadLocalTaskIdGetRequest {
    taskId: string;
}
export interface GetTaskDownloadUrlCicSearchDownloadTaskIdGetRequest {
    taskId: string;
}
export interface GetTaskResultsCicSearchResultsTaskIdGetRequest {
    taskId: string;
}
export interface GetTaskStatusCicSearchStatusTaskIdGetRequest {
    taskId: string;
}
export interface ProcessCicSearchCicSearchPostRequest {
    file: Blob;
    cicColumn?: string;
    maxCics?: number;
    parallelWorkers?: number;
    serverUrl?: string;
}
/**
 *
 */
export declare class CicApi extends runtime.BaseAPI {
    /**
     * Download the task results directly from local storage
     * Download Local File
     */
    downloadLocalFileCicSearchDownloadLocalTaskIdGetRaw(requestParameters: DownloadLocalFileCicSearchDownloadLocalTaskIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<any>>;
    /**
     * Download the task results directly from local storage
     * Download Local File
     */
    downloadLocalFileCicSearchDownloadLocalTaskIdGet(requestParameters: DownloadLocalFileCicSearchDownloadLocalTaskIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<any>;
    /**
     * Get a download URL for the task results from blob storage
     * Get Task Download Url
     */
    getTaskDownloadUrlCicSearchDownloadTaskIdGetRaw(requestParameters: GetTaskDownloadUrlCicSearchDownloadTaskIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<{
        [key: string]: string | null;
    }>>;
    /**
     * Get a download URL for the task results from blob storage
     * Get Task Download Url
     */
    getTaskDownloadUrlCicSearchDownloadTaskIdGet(requestParameters: GetTaskDownloadUrlCicSearchDownloadTaskIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<{
        [key: string]: string | null;
    }>;
    /**
     * Get the final results of a completed CIC processing task
     * Get Task Results
     */
    getTaskResultsCicSearchResultsTaskIdGetRaw(requestParameters: GetTaskResultsCicSearchResultsTaskIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<{
        [key: string]: any;
    }>>;
    /**
     * Get the final results of a completed CIC processing task
     * Get Task Results
     */
    getTaskResultsCicSearchResultsTaskIdGet(requestParameters: GetTaskResultsCicSearchResultsTaskIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<{
        [key: string]: any;
    }>;
    /**
     * Get the status of a CIC processing task
     * Get Task Status
     */
    getTaskStatusCicSearchStatusTaskIdGetRaw(requestParameters: GetTaskStatusCicSearchStatusTaskIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<{
        [key: string]: any;
    }>>;
    /**
     * Get the status of a CIC processing task
     * Get Task Status
     */
    getTaskStatusCicSearchStatusTaskIdGet(requestParameters: GetTaskStatusCicSearchStatusTaskIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<{
        [key: string]: any;
    }>;
    /**
     * Process CICs from a CSV or XLSX file through the CobranSaaS search and CSV update tools with parallelism.
     * Process Cic Search
     */
    processCicSearchCicSearchPostRaw(requestParameters: ProcessCicSearchCicSearchPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<{
        [key: string]: any;
    }>>;
    /**
     * Process CICs from a CSV or XLSX file through the CobranSaaS search and CSV update tools with parallelism.
     * Process Cic Search
     */
    processCicSearchCicSearchPost(requestParameters: ProcessCicSearchCicSearchPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<{
        [key: string]: any;
    }>;
}
