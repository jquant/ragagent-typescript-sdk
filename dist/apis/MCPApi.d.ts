/**
 * Ragagent MCP Gateway
 * Advanced AI-powered conversation management system
 *
 * The version of the OpenAPI document: 0.4.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
/**
 *
 */
export declare class MCPApi extends runtime.BaseAPI {
    /**
     * Return a consolidated specification of all tools exposed by the MCP server.  The response contains, for each registered tool:  * name – The public tool name. * description – Human-readable description. * parameters – JSON schema for the tool arguments (if available). * sample_input – An auto-generated example payload that conforms to the   parameters schema (best-effort).  This endpoint is *read-only* and does **not** proxy the request to the mounted MCP app – instead it inspects the in-memory ``mcp_server_instance`` that is initialised during application startup.  This keeps the dependency surface minimal and avoids additional network hops.
     * Get MCP server specification
     */
    getMcpServerSpecMcpServerSpecGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<any>>;
    /**
     * Return a consolidated specification of all tools exposed by the MCP server.  The response contains, for each registered tool:  * name – The public tool name. * description – Human-readable description. * parameters – JSON schema for the tool arguments (if available). * sample_input – An auto-generated example payload that conforms to the   parameters schema (best-effort).  This endpoint is *read-only* and does **not** proxy the request to the mounted MCP app – instead it inspects the in-memory ``mcp_server_instance`` that is initialised during application startup.  This keeps the dependency surface minimal and avoids additional network hops.
     * Get MCP server specification
     */
    getMcpServerSpecMcpServerSpecGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<any>;
}
