/**
 * Ragagent MCP Gateway
 * Advanced AI-powered conversation management system
 *
 * The version of the OpenAPI document: 0.4.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { ModelApiResponse, ToolExecutionRequest } from '../models/index';
export interface ExecuteToolApiV1ToolsToolNamePostRequest {
    toolName: string;
    toolExecutionRequest: ToolExecutionRequest;
}
/**
 *
 */
export declare class McpApiApi extends runtime.BaseAPI {
    /**
     * Execute a specific MCP tool  Executes the specified tool with the provided arguments and returns the result. The tool must be available in the MCP gateway\'s tool registry.
     * Execute Tool
     */
    executeToolApiV1ToolsToolNamePostRaw(requestParameters: ExecuteToolApiV1ToolsToolNamePostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ModelApiResponse>>;
    /**
     * Execute a specific MCP tool  Executes the specified tool with the provided arguments and returns the result. The tool must be available in the MCP gateway\'s tool registry.
     * Execute Tool
     */
    executeToolApiV1ToolsToolNamePost(requestParameters: ExecuteToolApiV1ToolsToolNamePostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ModelApiResponse>;
    /**
     * Get OpenAPI specification  Returns the OpenAPI specification for the REST API endpoints.
     * Get Openapi Spec
     */
    getOpenapiSpecApiV1OpenapiGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ModelApiResponse>>;
    /**
     * Get OpenAPI specification  Returns the OpenAPI specification for the REST API endpoints.
     * Get Openapi Spec
     */
    getOpenapiSpecApiV1OpenapiGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ModelApiResponse>;
    /**
     * Get OpenRPC specification  Returns the OpenRPC specification for the MCP JSON-RPC interface.
     * Get Openrpc Spec
     */
    getOpenrpcSpecApiV1OpenrpcGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ModelApiResponse>>;
    /**
     * Get OpenRPC specification  Returns the OpenRPC specification for the MCP JSON-RPC interface.
     * Get Openrpc Spec
     */
    getOpenrpcSpecApiV1OpenrpcGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ModelApiResponse>;
    /**
     * List all available MCP tools  Returns a comprehensive list of all tools available through the MCP gateway, including tool names, descriptions, parameters schemas, and metadata.
     * List All Tools
     */
    listAllToolsApiV1ToolsListAllToolsPostRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ModelApiResponse>>;
    /**
     * List all available MCP tools  Returns a comprehensive list of all tools available through the MCP gateway, including tool names, descriptions, parameters schemas, and metadata.
     * List All Tools
     */
    listAllToolsApiV1ToolsListAllToolsPost(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ModelApiResponse>;
    /**
     * List all available MCP prompts  Returns a list of all prompts available through the MCP gateway, including prompt names, descriptions, and argument schemas.
     * List Prompts
     */
    listPromptsApiV1PromptsListGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ModelApiResponse>>;
    /**
     * List all available MCP prompts  Returns a list of all prompts available through the MCP gateway, including prompt names, descriptions, and argument schemas.
     * List Prompts
     */
    listPromptsApiV1PromptsListGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ModelApiResponse>;
    /**
     * List all available MCP resources  Returns a list of all resources available through the MCP gateway, including resource URIs, descriptions, and MIME types.
     * List Resources
     */
    listResourcesApiV1ResourcesListGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ModelApiResponse>>;
    /**
     * List all available MCP resources  Returns a list of all resources available through the MCP gateway, including resource URIs, descriptions, and MIME types.
     * List Resources
     */
    listResourcesApiV1ResourcesListGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ModelApiResponse>;
    /**
     * Health check for MCP API endpoints  Verifies that the MCP server and gateway router are properly initialized and can respond to basic requests.
     * Mcp Api Health
     */
    mcpApiHealthApiV1HealthGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ModelApiResponse>>;
    /**
     * Health check for MCP API endpoints  Verifies that the MCP server and gateway router are properly initialized and can respond to basic requests.
     * Mcp Api Health
     */
    mcpApiHealthApiV1HealthGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ModelApiResponse>;
}
