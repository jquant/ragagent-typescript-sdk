"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Ragagent MCP Gateway
 * Advanced AI-powered conversation management system
 *
 * The version of the OpenAPI document: 0.4.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.WabaSignupApi = void 0;
const runtime = require("../runtime");
const index_1 = require("../models/index");
/**
 *
 */
class WabaSignupApi extends runtime.BaseAPI {
    /**
     * Complete WABA signup process and update tenant configuration.  This endpoint processes the signup completion, exchanges tokens, and updates the tenant configuration with the new WABA credentials.
     * Complete Waba Signup
     */
    completeWabaSignupWabaSignupCompletePostRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters['wABASignupCompleteRequest'] == null) {
                throw new runtime.RequiredError('wABASignupCompleteRequest', 'Required parameter "wABASignupCompleteRequest" was null or undefined when calling completeWabaSignupWabaSignupCompletePost().');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            const response = yield this.request({
                path: `/waba-signup/complete`,
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
                body: (0, index_1.WABASignupCompleteRequestToJSON)(requestParameters['wABASignupCompleteRequest']),
            }, initOverrides);
            return new runtime.JSONApiResponse(response, (jsonValue) => (0, index_1.WABASignupCompleteResponseFromJSON)(jsonValue));
        });
    }
    /**
     * Complete WABA signup process and update tenant configuration.  This endpoint processes the signup completion, exchanges tokens, and updates the tenant configuration with the new WABA credentials.
     * Complete Waba Signup
     */
    completeWabaSignupWabaSignupCompletePost(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.completeWabaSignupWabaSignupCompletePostRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * Exchange authorization code for access token.  This endpoint handles the OAuth token exchange with Facebook\'s Graph API.
     * Exchange Token
     */
    exchangeTokenWabaSignupExchangeTokenPostRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters['wABATokenExchangeRequest'] == null) {
                throw new runtime.RequiredError('wABATokenExchangeRequest', 'Required parameter "wABATokenExchangeRequest" was null or undefined when calling exchangeTokenWabaSignupExchangeTokenPost().');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            const response = yield this.request({
                path: `/waba-signup/exchange-token`,
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
                body: (0, index_1.WABATokenExchangeRequestToJSON)(requestParameters['wABATokenExchangeRequest']),
            }, initOverrides);
            return new runtime.JSONApiResponse(response, (jsonValue) => (0, index_1.WABATokenExchangeResponseFromJSON)(jsonValue));
        });
    }
    /**
     * Exchange authorization code for access token.  This endpoint handles the OAuth token exchange with Facebook\'s Graph API.
     * Exchange Token
     */
    exchangeTokenWabaSignupExchangeTokenPost(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.exchangeTokenWabaSignupExchangeTokenPostRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * Initiate WABA signup session.  This endpoint creates a signup session URL for Meta\'s WABA signup flow. It uses the Facebook App configuration to generate the session parameters.
     * Initiate Waba Signup
     */
    initiateWabaSignupWabaSignupInitiatePostRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters['wABASignupSessionRequest'] == null) {
                throw new runtime.RequiredError('wABASignupSessionRequest', 'Required parameter "wABASignupSessionRequest" was null or undefined when calling initiateWabaSignupWabaSignupInitiatePost().');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            const response = yield this.request({
                path: `/waba-signup/initiate`,
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
                body: (0, index_1.WABASignupSessionRequestToJSON)(requestParameters['wABASignupSessionRequest']),
            }, initOverrides);
            return new runtime.JSONApiResponse(response, (jsonValue) => (0, index_1.WABASignupSessionResponseFromJSON)(jsonValue));
        });
    }
    /**
     * Initiate WABA signup session.  This endpoint creates a signup session URL for Meta\'s WABA signup flow. It uses the Facebook App configuration to generate the session parameters.
     * Initiate Waba Signup
     */
    initiateWabaSignupWabaSignupInitiatePost(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.initiateWabaSignupWabaSignupInitiatePostRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * Serve a demo page for testing WABA Embedded Signup.  This endpoint provides a complete HTML page with the Facebook SDK integration for testing the embedded signup flow.
     * Waba Signup Demo
     */
    wabaSignupDemoWabaSignupDemoGetRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const queryParameters = {};
            if (requestParameters['tenantId'] != null) {
                queryParameters['tenant_id'] = requestParameters['tenantId'];
            }
            const headerParameters = {};
            const response = yield this.request({
                path: `/waba-signup/demo`,
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            }, initOverrides);
            if (this.isJsonMime(response.headers.get('content-type'))) {
                return new runtime.JSONApiResponse(response);
            }
            else {
                return new runtime.TextApiResponse(response);
            }
        });
    }
    /**
     * Serve a demo page for testing WABA Embedded Signup.  This endpoint provides a complete HTML page with the Facebook SDK integration for testing the embedded signup flow.
     * Waba Signup Demo
     */
    wabaSignupDemoWabaSignupDemoGet() {
        return __awaiter(this, arguments, void 0, function* (requestParameters = {}, initOverrides) {
            const response = yield this.wabaSignupDemoWabaSignupDemoGetRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * Handle webhook events from Facebook WABA Embedded Signup.  This endpoint receives message events and other notifications from the embedded signup flow.
     * Waba Signup Webhook
     */
    wabaSignupWebhookWabaSignupWebhookPostRaw(initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const queryParameters = {};
            const headerParameters = {};
            const response = yield this.request({
                path: `/waba-signup/webhook`,
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
            }, initOverrides);
            if (this.isJsonMime(response.headers.get('content-type'))) {
                return new runtime.JSONApiResponse(response);
            }
            else {
                return new runtime.TextApiResponse(response);
            }
        });
    }
    /**
     * Handle webhook events from Facebook WABA Embedded Signup.  This endpoint receives message events and other notifications from the embedded signup flow.
     * Waba Signup Webhook
     */
    wabaSignupWebhookWabaSignupWebhookPost(initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.wabaSignupWebhookWabaSignupWebhookPostRaw(initOverrides);
            return yield response.value();
        });
    }
}
exports.WabaSignupApi = WabaSignupApi;
