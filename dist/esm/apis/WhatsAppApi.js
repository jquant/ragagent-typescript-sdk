/* tslint:disable */
/* eslint-disable */
/**
 * Ragagent MCP Gateway
 * Advanced AI-powered conversation management system
 *
 * The version of the OpenAPI document: 0.4.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
import * as runtime from '../runtime';
/**
 *
 */
export class WhatsAppApi extends runtime.BaseAPI {
    /**
     * Webhook verification endpoint for WhatsApp.
     * Webhook Verify
     */
    webhookVerifyWhatsappWebhookGetRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const queryParameters = {};
            if (requestParameters['hubMode'] != null) {
                queryParameters['hub_mode'] = requestParameters['hubMode'];
            }
            if (requestParameters['hubVerifyToken'] != null) {
                queryParameters['hub_verify_token'] = requestParameters['hubVerifyToken'];
            }
            if (requestParameters['hubChallenge'] != null) {
                queryParameters['hub_challenge'] = requestParameters['hubChallenge'];
            }
            const headerParameters = {};
            const response = yield this.request({
                path: `/whatsapp/webhook`,
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            }, initOverrides);
            if (this.isJsonMime(response.headers.get('content-type'))) {
                return new runtime.JSONApiResponse(response);
            }
            else {
                return new runtime.TextApiResponse(response);
            }
        });
    }
    /**
     * Webhook verification endpoint for WhatsApp.
     * Webhook Verify
     */
    webhookVerifyWhatsappWebhookGet() {
        return __awaiter(this, arguments, void 0, function* (requestParameters = {}, initOverrides) {
            const response = yield this.webhookVerifyWhatsappWebhookGetRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * Webhook endpoint to receive WhatsApp messages and flow data.
     * Webhook
     */
    webhookWhatsappWebhookPostRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const queryParameters = {};
            const headerParameters = {};
            if (requestParameters['xHubSignature256'] != null) {
                headerParameters['x-hub-signature-256'] = String(requestParameters['xHubSignature256']);
            }
            const response = yield this.request({
                path: `/whatsapp/webhook`,
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
            }, initOverrides);
            if (this.isJsonMime(response.headers.get('content-type'))) {
                return new runtime.JSONApiResponse(response);
            }
            else {
                return new runtime.TextApiResponse(response);
            }
        });
    }
    /**
     * Webhook endpoint to receive WhatsApp messages and flow data.
     * Webhook
     */
    webhookWhatsappWebhookPost() {
        return __awaiter(this, arguments, void 0, function* (requestParameters = {}, initOverrides) {
            const response = yield this.webhookWhatsappWebhookPostRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
}
