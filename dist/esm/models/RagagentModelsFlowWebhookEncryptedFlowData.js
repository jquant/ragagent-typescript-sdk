/* tslint:disable */
/* eslint-disable */
/**
 * Ragagent MCP Gateway
 * Advanced AI-powered conversation management system
 *
 * The version of the OpenAPI document: 0.4.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the RagagentModelsFlowWebhookEncryptedFlowData interface.
 */
export function instanceOfRagagentModelsFlowWebhookEncryptedFlowData(value) {
    if (!('encryptedFlowData' in value) || value['encryptedFlowData'] === undefined)
        return false;
    if (!('encryptedAesKey' in value) || value['encryptedAesKey'] === undefined)
        return false;
    if (!('initialVector' in value) || value['initialVector'] === undefined)
        return false;
    return true;
}
export function RagagentModelsFlowWebhookEncryptedFlowDataFromJSON(json) {
    return RagagentModelsFlowWebhookEncryptedFlowDataFromJSONTyped(json, false);
}
export function RagagentModelsFlowWebhookEncryptedFlowDataFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'encryptedFlowData': json['encrypted_flow_data'],
        'encryptedAesKey': json['encrypted_aes_key'],
        'initialVector': json['initial_vector'],
    };
}
export function RagagentModelsFlowWebhookEncryptedFlowDataToJSON(json) {
    return RagagentModelsFlowWebhookEncryptedFlowDataToJSONTyped(json, false);
}
export function RagagentModelsFlowWebhookEncryptedFlowDataToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'encrypted_flow_data': value['encryptedFlowData'],
        'encrypted_aes_key': value['encryptedAesKey'],
        'initial_vector': value['initialVector'],
    };
}
