/* tslint:disable */
/* eslint-disable */
/**
 * Ragagent MCP Gateway
 * Advanced AI-powered conversation management system
 *
 * The version of the OpenAPI document: 0.4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  HTTPValidationError,
  WABASignupCompleteRequest,
  WABASignupCompleteResponse,
  WABASignupSessionRequest,
  WABASignupSessionResponse,
  WABATokenExchangeRequest,
  WABATokenExchangeResponse,
} from '../models/index';
import {
    HTTPValidationErrorFromJSON,
    HTTPValidationErrorToJSON,
    WABASignupCompleteRequestFromJSON,
    WABASignupCompleteRequestToJSON,
    WABASignupCompleteResponseFromJSON,
    WABASignupCompleteResponseToJSON,
    WABASignupSessionRequestFromJSON,
    WABASignupSessionRequestToJSON,
    WABASignupSessionResponseFromJSON,
    WABASignupSessionResponseToJSON,
    WABATokenExchangeRequestFromJSON,
    WABATokenExchangeRequestToJSON,
    WABATokenExchangeResponseFromJSON,
    WABATokenExchangeResponseToJSON,
} from '../models/index';

export interface CompleteWabaSignupWabaSignupCompletePostRequest {
    wABASignupCompleteRequest: WABASignupCompleteRequest;
}

export interface ExchangeTokenWabaSignupExchangeTokenPostRequest {
    wABATokenExchangeRequest: WABATokenExchangeRequest;
}

export interface InitiateWabaSignupWabaSignupInitiatePostRequest {
    wABASignupSessionRequest: WABASignupSessionRequest;
}

export interface WabaSignupDemoWabaSignupDemoGetRequest {
    tenantId?: string;
}

/**
 * 
 */
export class WabaSignupApi extends runtime.BaseAPI {

    /**
     * Complete WABA signup process and update tenant configuration.  This endpoint processes the signup completion, exchanges tokens, and updates the tenant configuration with the new WABA credentials.
     * Complete Waba Signup
     */
    async completeWabaSignupWabaSignupCompletePostRaw(requestParameters: CompleteWabaSignupWabaSignupCompletePostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<WABASignupCompleteResponse>> {
        if (requestParameters['wABASignupCompleteRequest'] == null) {
            throw new runtime.RequiredError(
                'wABASignupCompleteRequest',
                'Required parameter "wABASignupCompleteRequest" was null or undefined when calling completeWabaSignupWabaSignupCompletePost().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/waba-signup/complete`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: WABASignupCompleteRequestToJSON(requestParameters['wABASignupCompleteRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => WABASignupCompleteResponseFromJSON(jsonValue));
    }

    /**
     * Complete WABA signup process and update tenant configuration.  This endpoint processes the signup completion, exchanges tokens, and updates the tenant configuration with the new WABA credentials.
     * Complete Waba Signup
     */
    async completeWabaSignupWabaSignupCompletePost(requestParameters: CompleteWabaSignupWabaSignupCompletePostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<WABASignupCompleteResponse> {
        const response = await this.completeWabaSignupWabaSignupCompletePostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Exchange authorization code for access token.  This endpoint handles the OAuth token exchange with Facebook\'s Graph API.
     * Exchange Token
     */
    async exchangeTokenWabaSignupExchangeTokenPostRaw(requestParameters: ExchangeTokenWabaSignupExchangeTokenPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<WABATokenExchangeResponse>> {
        if (requestParameters['wABATokenExchangeRequest'] == null) {
            throw new runtime.RequiredError(
                'wABATokenExchangeRequest',
                'Required parameter "wABATokenExchangeRequest" was null or undefined when calling exchangeTokenWabaSignupExchangeTokenPost().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/waba-signup/exchange-token`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: WABATokenExchangeRequestToJSON(requestParameters['wABATokenExchangeRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => WABATokenExchangeResponseFromJSON(jsonValue));
    }

    /**
     * Exchange authorization code for access token.  This endpoint handles the OAuth token exchange with Facebook\'s Graph API.
     * Exchange Token
     */
    async exchangeTokenWabaSignupExchangeTokenPost(requestParameters: ExchangeTokenWabaSignupExchangeTokenPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<WABATokenExchangeResponse> {
        const response = await this.exchangeTokenWabaSignupExchangeTokenPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Initiate WABA signup session.  This endpoint creates a signup session URL for Meta\'s WABA signup flow. It uses the Facebook App configuration to generate the session parameters.
     * Initiate Waba Signup
     */
    async initiateWabaSignupWabaSignupInitiatePostRaw(requestParameters: InitiateWabaSignupWabaSignupInitiatePostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<WABASignupSessionResponse>> {
        if (requestParameters['wABASignupSessionRequest'] == null) {
            throw new runtime.RequiredError(
                'wABASignupSessionRequest',
                'Required parameter "wABASignupSessionRequest" was null or undefined when calling initiateWabaSignupWabaSignupInitiatePost().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/waba-signup/initiate`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: WABASignupSessionRequestToJSON(requestParameters['wABASignupSessionRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => WABASignupSessionResponseFromJSON(jsonValue));
    }

    /**
     * Initiate WABA signup session.  This endpoint creates a signup session URL for Meta\'s WABA signup flow. It uses the Facebook App configuration to generate the session parameters.
     * Initiate Waba Signup
     */
    async initiateWabaSignupWabaSignupInitiatePost(requestParameters: InitiateWabaSignupWabaSignupInitiatePostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<WABASignupSessionResponse> {
        const response = await this.initiateWabaSignupWabaSignupInitiatePostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Serve a demo page for testing WABA Embedded Signup.  This endpoint provides a complete HTML page with the Facebook SDK integration for testing the embedded signup flow.
     * Waba Signup Demo
     */
    async wabaSignupDemoWabaSignupDemoGetRaw(requestParameters: WabaSignupDemoWabaSignupDemoGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<any>> {
        const queryParameters: any = {};

        if (requestParameters['tenantId'] != null) {
            queryParameters['tenant_id'] = requestParameters['tenantId'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/waba-signup/demo`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        if (this.isJsonMime(response.headers.get('content-type'))) {
            return new runtime.JSONApiResponse<any>(response);
        } else {
            return new runtime.TextApiResponse(response) as any;
        }
    }

    /**
     * Serve a demo page for testing WABA Embedded Signup.  This endpoint provides a complete HTML page with the Facebook SDK integration for testing the embedded signup flow.
     * Waba Signup Demo
     */
    async wabaSignupDemoWabaSignupDemoGet(requestParameters: WabaSignupDemoWabaSignupDemoGetRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<any> {
        const response = await this.wabaSignupDemoWabaSignupDemoGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Handle webhook events from Facebook WABA Embedded Signup.  This endpoint receives message events and other notifications from the embedded signup flow.
     * Waba Signup Webhook
     */
    async wabaSignupWebhookWabaSignupWebhookPostRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<any>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/waba-signup/webhook`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        if (this.isJsonMime(response.headers.get('content-type'))) {
            return new runtime.JSONApiResponse<any>(response);
        } else {
            return new runtime.TextApiResponse(response) as any;
        }
    }

    /**
     * Handle webhook events from Facebook WABA Embedded Signup.  This endpoint receives message events and other notifications from the embedded signup flow.
     * Waba Signup Webhook
     */
    async wabaSignupWebhookWabaSignupWebhookPost(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<any> {
        const response = await this.wabaSignupWebhookWabaSignupWebhookPostRaw(initOverrides);
        return await response.value();
    }

}
