/* tslint:disable */
/* eslint-disable */
/**
 * Ragagent MCP Gateway
 * Advanced AI-powered conversation management system
 *
 * The version of the OpenAPI document: 0.4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Data structure for error reported during WABA signup.
 * @export
 * @interface ErrorSignupData
 */
export interface ErrorSignupData {
    /**
     * Error description displayed to customer
     * @type {string}
     * @memberof ErrorSignupData
     */
    errorMessage: string;
    /**
     * Error ID for support
     * @type {string}
     * @memberof ErrorSignupData
     */
    errorId: string;
    /**
     * Unique session ID for support
     * @type {string}
     * @memberof ErrorSignupData
     */
    sessionId: string;
    /**
     * Unix timestamp when error was reported
     * @type {number}
     * @memberof ErrorSignupData
     */
    timestamp: number;
}

/**
 * Check if a given object implements the ErrorSignupData interface.
 */
export function instanceOfErrorSignupData(value: object): value is ErrorSignupData {
    if (!('errorMessage' in value) || value['errorMessage'] === undefined) return false;
    if (!('errorId' in value) || value['errorId'] === undefined) return false;
    if (!('sessionId' in value) || value['sessionId'] === undefined) return false;
    if (!('timestamp' in value) || value['timestamp'] === undefined) return false;
    return true;
}

export function ErrorSignupDataFromJSON(json: any): ErrorSignupData {
    return ErrorSignupDataFromJSONTyped(json, false);
}

export function ErrorSignupDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): ErrorSignupData {
    if (json == null) {
        return json;
    }
    return {
        
        'errorMessage': json['error_message'],
        'errorId': json['error_id'],
        'sessionId': json['session_id'],
        'timestamp': json['timestamp'],
    };
}

export function ErrorSignupDataToJSON(json: any): ErrorSignupData {
    return ErrorSignupDataToJSONTyped(json, false);
}

export function ErrorSignupDataToJSONTyped(value?: ErrorSignupData | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'error_message': value['errorMessage'],
        'error_id': value['errorId'],
        'session_id': value['sessionId'],
        'timestamp': value['timestamp'],
    };
}

