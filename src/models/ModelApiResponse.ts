/* tslint:disable */
/* eslint-disable */
/**
 * Ragagent MCP Gateway
 * Advanced AI-powered conversation management system
 *
 * The version of the OpenAPI document: 0.4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Standard API response wrapper
 * @export
 * @interface ModelApiResponse
 */
export interface ModelApiResponse {
    /**
     * 
     * @type {boolean}
     * @memberof ModelApiResponse
     */
    success: boolean;
    /**
     * 
     * @type {string}
     * @memberof ModelApiResponse
     */
    message?: string;
    /**
     * 
     * @type {}
     * @memberof ModelApiResponse
     */
    result?:  | null;
    /**
     * 
     * @type {string}
     * @memberof ModelApiResponse
     */
    error?: string | null;
}

/**
 * Check if a given object implements the ModelApiResponse interface.
 */
export function instanceOfModelApiResponse(value: object): value is ModelApiResponse {
    if (!('success' in value) || value['success'] === undefined) return false;
    return true;
}

export function ModelApiResponseFromJSON(json: any): ModelApiResponse {
    return ModelApiResponseFromJSONTyped(json, false);
}

export function ModelApiResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModelApiResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'success': json['success'],
        'message': json['message'] == null ? undefined : json['message'],
        'result': json['result'] == null ? undefined : json['result'],
        'error': json['error'] == null ? undefined : json['error'],
    };
}

export function ModelApiResponseToJSON(json: any): ModelApiResponse {
    return ModelApiResponseToJSONTyped(json, false);
}

export function ModelApiResponseToJSONTyped(value?: ModelApiResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'success': value['success'],
        'message': value['message'],
        'result': value['result'],
        'error': value['error'],
    };
}

