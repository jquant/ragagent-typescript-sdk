/* tslint:disable */
/* eslint-disable */
/**
 * Ragagent MCP Gateway
 * Advanced AI-powered conversation management system
 *
 * The version of the OpenAPI document: 0.4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ErrorSignupData } from './ErrorSignupData';
import {
    ErrorSignupDataFromJSON,
    ErrorSignupDataFromJSONTyped,
    ErrorSignupDataToJSON,
    ErrorSignupDataToJSONTyped,
} from './ErrorSignupData';
import type { SuccessfulSignupData } from './SuccessfulSignupData';
import {
    SuccessfulSignupDataFromJSON,
    SuccessfulSignupDataFromJSONTyped,
    SuccessfulSignupDataToJSON,
    SuccessfulSignupDataToJSONTyped,
} from './SuccessfulSignupData';
import type { AbandonedSignupData } from './AbandonedSignupData';
import {
    AbandonedSignupDataFromJSON,
    AbandonedSignupDataFromJSONTyped,
    AbandonedSignupDataToJSON,
    AbandonedSignupDataToJSONTyped,
} from './AbandonedSignupData';

/**
 * 
 * @export
 * @interface SignupData
 */
export interface SignupData {
    /**
     * Customer's business phone number ID
     * @type {string}
     * @memberof SignupData
     */
    phoneNumberId: string;
    /**
     * Customer's WhatsApp Business Account ID
     * @type {string}
     * @memberof SignupData
     */
    wabaId: string;
    /**
     * Customer's business portfolio ID
     * @type {string}
     * @memberof SignupData
     */
    businessId: string;
    /**
     * Screen where customer abandoned the flow
     * @type {string}
     * @memberof SignupData
     */
    currentStep: string;
    /**
     * Error description displayed to customer
     * @type {string}
     * @memberof SignupData
     */
    errorMessage: string;
    /**
     * Error ID for support
     * @type {string}
     * @memberof SignupData
     */
    errorId: string;
    /**
     * Unique session ID for support
     * @type {string}
     * @memberof SignupData
     */
    sessionId: string;
    /**
     * Unix timestamp when error was reported
     * @type {number}
     * @memberof SignupData
     */
    timestamp: number;
}

/**
 * Check if a given object implements the SignupData interface.
 */
export function instanceOfSignupData(value: object): value is SignupData {
    if (!('phoneNumberId' in value) || value['phoneNumberId'] === undefined) return false;
    if (!('wabaId' in value) || value['wabaId'] === undefined) return false;
    if (!('businessId' in value) || value['businessId'] === undefined) return false;
    if (!('currentStep' in value) || value['currentStep'] === undefined) return false;
    if (!('errorMessage' in value) || value['errorMessage'] === undefined) return false;
    if (!('errorId' in value) || value['errorId'] === undefined) return false;
    if (!('sessionId' in value) || value['sessionId'] === undefined) return false;
    if (!('timestamp' in value) || value['timestamp'] === undefined) return false;
    return true;
}

export function SignupDataFromJSON(json: any): SignupData {
    return SignupDataFromJSONTyped(json, false);
}

export function SignupDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): SignupData {
    if (json == null) {
        return json;
    }
    return {
        
        'phoneNumberId': json['phone_number_id'],
        'wabaId': json['waba_id'],
        'businessId': json['business_id'],
        'currentStep': json['current_step'],
        'errorMessage': json['error_message'],
        'errorId': json['error_id'],
        'sessionId': json['session_id'],
        'timestamp': json['timestamp'],
    };
}

export function SignupDataToJSON(json: any): SignupData {
    return SignupDataToJSONTyped(json, false);
}

export function SignupDataToJSONTyped(value?: SignupData | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'phone_number_id': value['phoneNumberId'],
        'waba_id': value['wabaId'],
        'business_id': value['businessId'],
        'current_step': value['currentStep'],
        'error_message': value['errorMessage'],
        'error_id': value['errorId'],
        'session_id': value['sessionId'],
        'timestamp': value['timestamp'],
    };
}

