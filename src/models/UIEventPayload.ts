/* tslint:disable */
/* eslint-disable */
/**
 * Ragagent MCP Gateway
 * Advanced AI-powered conversation management system
 *
 * The version of the OpenAPI document: 0.4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UIEventPayload
 */
export interface UIEventPayload {
    /**
     * 
     * @type {string}
     * @memberof UIEventPayload
     */
    tenantId: string;
    /**
     * 
     * @type {string}
     * @memberof UIEventPayload
     */
    userPrompt: string;
    /**
     * 
     * @type {string}
     * @memberof UIEventPayload
     */
    conversationId?: string | null;
    /**
     * 
     * @type {string}
     * @memberof UIEventPayload
     */
    requestId?: string | null;
    /**
     * 
     * @type {string}
     * @memberof UIEventPayload
     */
    source?: string | null;
}

/**
 * Check if a given object implements the UIEventPayload interface.
 */
export function instanceOfUIEventPayload(value: object): value is UIEventPayload {
    if (!('tenantId' in value) || value['tenantId'] === undefined) return false;
    if (!('userPrompt' in value) || value['userPrompt'] === undefined) return false;
    return true;
}

export function UIEventPayloadFromJSON(json: any): UIEventPayload {
    return UIEventPayloadFromJSONTyped(json, false);
}

export function UIEventPayloadFromJSONTyped(json: any, ignoreDiscriminator: boolean): UIEventPayload {
    if (json == null) {
        return json;
    }
    return {
        
        'tenantId': json['tenant_id'],
        'userPrompt': json['user_prompt'],
        'conversationId': json['conversation_id'] == null ? undefined : json['conversation_id'],
        'requestId': json['request_id'] == null ? undefined : json['request_id'],
        'source': json['source'] == null ? undefined : json['source'],
    };
}

export function UIEventPayloadToJSON(json: any): UIEventPayload {
    return UIEventPayloadToJSONTyped(json, false);
}

export function UIEventPayloadToJSONTyped(value?: UIEventPayload | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'tenant_id': value['tenantId'],
        'user_prompt': value['userPrompt'],
        'conversation_id': value['conversationId'],
        'request_id': value['requestId'],
        'source': value['source'],
    };
}

