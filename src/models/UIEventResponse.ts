/* tslint:disable */
/* eslint-disable */
/**
 * Ragagent MCP Gateway
 * Advanced AI-powered conversation management system
 *
 * The version of the OpenAPI document: 0.4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UIEventResponse
 */
export interface UIEventResponse {
    /**
     * 
     * @type {string}
     * @memberof UIEventResponse
     */
    requestId: string;
    /**
     * 
     * @type {string}
     * @memberof UIEventResponse
     */
    conversationId: string;
    /**
     * 
     * @type {string}
     * @memberof UIEventResponse
     */
    tenantId: string;
    /**
     * 
     * @type {string}
     * @memberof UIEventResponse
     */
    agentResponse: string | null;
    /**
     * 
     * @type {string}
     * @memberof UIEventResponse
     */
    timestamp: string;
    /**
     * 
     * @type {string}
     * @memberof UIEventResponse
     */
    status: string;
}

/**
 * Check if a given object implements the UIEventResponse interface.
 */
export function instanceOfUIEventResponse(value: object): value is UIEventResponse {
    if (!('requestId' in value) || value['requestId'] === undefined) return false;
    if (!('conversationId' in value) || value['conversationId'] === undefined) return false;
    if (!('tenantId' in value) || value['tenantId'] === undefined) return false;
    if (!('agentResponse' in value) || value['agentResponse'] === undefined) return false;
    if (!('timestamp' in value) || value['timestamp'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    return true;
}

export function UIEventResponseFromJSON(json: any): UIEventResponse {
    return UIEventResponseFromJSONTyped(json, false);
}

export function UIEventResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): UIEventResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'requestId': json['request_id'],
        'conversationId': json['conversation_id'],
        'tenantId': json['tenant_id'],
        'agentResponse': json['agent_response'],
        'timestamp': json['timestamp'],
        'status': json['status'],
    };
}

export function UIEventResponseToJSON(json: any): UIEventResponse {
    return UIEventResponseToJSONTyped(json, false);
}

export function UIEventResponseToJSONTyped(value?: UIEventResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'request_id': value['requestId'],
        'conversation_id': value['conversationId'],
        'tenant_id': value['tenantId'],
        'agent_response': value['agentResponse'],
        'timestamp': value['timestamp'],
        'status': value['status'],
    };
}

